var _prikhi$elm_http_builder$HttpBuilder$appendQuery = F3(
	function (url, key, value) {
		return A2(_elm_lang$core$String$contains, '?', url) ? A2(
			_elm_lang$core$Basics_ops['++'],
			url,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'&',
				A2(
					_elm_lang$core$Basics_ops['++'],
					key,
					A2(_elm_lang$core$Basics_ops['++'], '=', value)))) : A2(
			_elm_lang$core$Basics_ops['++'],
			url,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'?',
				A2(
					_elm_lang$core$Basics_ops['++'],
					key,
					A2(_elm_lang$core$Basics_ops['++'], '=', value))));
	});
var _prikhi$elm_http_builder$HttpBuilder$replace = F2(
	function (old, $new) {
		return function (_p0) {
			return A2(
				_elm_lang$core$String$join,
				$new,
				A2(_elm_lang$core$String$split, old, _p0));
		};
	});
var _prikhi$elm_http_builder$HttpBuilder$queryEscape = function (_p1) {
	return A3(
		_prikhi$elm_http_builder$HttpBuilder$replace,
		'%20',
		'+',
		_elm_lang$http$Http$encodeUri(_p1));
};
var _prikhi$elm_http_builder$HttpBuilder$queryPair = function (_p2) {
	var _p3 = _p2;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_prikhi$elm_http_builder$HttpBuilder$queryEscape(_p3._0),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'=',
			_prikhi$elm_http_builder$HttpBuilder$queryEscape(_p3._1)));
};
var _prikhi$elm_http_builder$HttpBuilder$joinUrlEncoded = function (args) {
	return A2(
		_elm_lang$core$String$join,
		'&',
		A2(_elm_lang$core$List$map, _prikhi$elm_http_builder$HttpBuilder$queryPair, args));
};
var _prikhi$elm_http_builder$HttpBuilder$toSettings = function (_p4) {
	var _p5 = _p4;
	return _p5._1;
};
var _prikhi$elm_http_builder$HttpBuilder$appendCacheBusterToUrl = F2(
	function (request, time) {
		return _elm_lang$core$Native_Utils.update(
			request,
			{
				url: A3(
					_prikhi$elm_http_builder$HttpBuilder$appendQuery,
					request.url,
					'_',
					_elm_lang$core$Basics$toString(time))
			});
	});
var _prikhi$elm_http_builder$HttpBuilder$unitReader = _elm_lang$core$Basics$always(
	_elm_lang$core$Result$Ok(
		{ctor: '_Tuple0'}));
var _prikhi$elm_http_builder$HttpBuilder$jsonReader = _elm_lang$core$Json_Decode$decodeString;
var _prikhi$elm_http_builder$HttpBuilder$stringReader = function (value) {
	return _elm_lang$core$Result$Ok(value);
};
var _prikhi$elm_http_builder$HttpBuilder$fromResponse = function (response) {
	return {data: response.body, status: response.status.code, statusText: response.status.message, headers: response.headers, url: response.url};
};
var _prikhi$elm_http_builder$HttpBuilder$decodeResponse = F2(
	function (reader, strResponse) {
		var replaceBody = F2(
			function (response, data) {
				return _elm_lang$core$Native_Utils.update(
					response,
					{data: data});
			});
		return A2(
			_elm_lang$core$Result$map,
			replaceBody(
				_prikhi$elm_http_builder$HttpBuilder$fromResponse(strResponse)),
			reader(strResponse.body));
	});
var _prikhi$elm_http_builder$HttpBuilder$toRequestRecord = F2(
	function (reader, _p6) {
		var _p7 = _p6;
		var _p9 = _p7._1;
		var _p8 = _p7._0;
		return {
			method: _p8.method,
			headers: _p8.headers,
			url: _p8.url,
			body: _p8.body,
			expect: _elm_lang$http$Http$expectStringResponse(
				_prikhi$elm_http_builder$HttpBuilder$decodeResponse(reader)),
			timeout: _elm_lang$core$Maybe$Just(_p9.timeout),
			withCredentials: _p9.withCredentials
		};
	});
var _prikhi$elm_http_builder$HttpBuilder$toRequest = F2(
	function (builder, reader) {
		return _elm_lang$http$Http$request(
			A2(_prikhi$elm_http_builder$HttpBuilder$toRequestRecord, reader, builder));
	});
var _prikhi$elm_http_builder$HttpBuilder$url = F2(
	function (base, params) {
		return _elm_lang$core$List$isEmpty(params) ? base : A2(
			_elm_lang$core$Basics_ops['++'],
			base,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'?',
				_prikhi$elm_http_builder$HttpBuilder$joinUrlEncoded(params)));
	});
var _prikhi$elm_http_builder$HttpBuilder$defaultInternals = {cacheBuster: false, zeroStatusAllowed: false};
var _prikhi$elm_http_builder$HttpBuilder$defaultSettings = {timeout: 0, withCredentials: false};
var _prikhi$elm_http_builder$HttpBuilder$Request = F5(
	function (a, b, c, d, e) {
		return {method: a, headers: b, url: c, body: d, expect: e};
	});
var _prikhi$elm_http_builder$HttpBuilder$Settings = F2(
	function (a, b) {
		return {timeout: a, withCredentials: b};
	});
var _prikhi$elm_http_builder$HttpBuilder$Internals = F2(
	function (a, b) {
		return {cacheBuster: a, zeroStatusAllowed: b};
	});
var _prikhi$elm_http_builder$HttpBuilder$Response = F5(
	function (a, b, c, d, e) {
		return {data: a, status: b, statusText: c, headers: d, url: e};
	});
var _prikhi$elm_http_builder$HttpBuilder$RequestBuilder = F3(
	function (a, b, c) {
		return {ctor: 'RequestBuilder', _0: a, _1: b, _2: c};
	});
var _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl = F2(
	function (method, url) {
		return A3(
			_prikhi$elm_http_builder$HttpBuilder$RequestBuilder,
			{
				method: method,
				url: url,
				headers: {ctor: '[]'},
				body: _elm_lang$http$Http$emptyBody,
				expect: _elm_lang$http$Http$expectString
			},
			_prikhi$elm_http_builder$HttpBuilder$defaultSettings,
			_prikhi$elm_http_builder$HttpBuilder$defaultInternals);
	});
var _prikhi$elm_http_builder$HttpBuilder$get = _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl('GET');
var _prikhi$elm_http_builder$HttpBuilder$post = _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl('POST');
var _prikhi$elm_http_builder$HttpBuilder$put = _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl('PUT');
var _prikhi$elm_http_builder$HttpBuilder$patch = _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl('PATCH');
var _prikhi$elm_http_builder$HttpBuilder$delete = _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl('DELETE');
var _prikhi$elm_http_builder$HttpBuilder$options = _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl('OPTIONS');
var _prikhi$elm_http_builder$HttpBuilder$trace = _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl('TRACE');
var _prikhi$elm_http_builder$HttpBuilder$head = _prikhi$elm_http_builder$HttpBuilder$requestWithVerbAndUrl('HEAD');
var _prikhi$elm_http_builder$HttpBuilder$mapRequest = F2(
	function (updater, _p10) {
		var _p11 = _p10;
		return A3(
			_prikhi$elm_http_builder$HttpBuilder$RequestBuilder,
			updater(_p11._0),
			_p11._1,
			_p11._2);
	});
var _prikhi$elm_http_builder$HttpBuilder$withHeader = F2(
	function (key, value) {
		return _prikhi$elm_http_builder$HttpBuilder$mapRequest(
			function (request) {
				return _elm_lang$core$Native_Utils.update(
					request,
					{
						headers: {
							ctor: '::',
							_0: A2(_elm_lang$http$Http$header, key, value),
							_1: request.headers
						}
					});
			});
	});
var _prikhi$elm_http_builder$HttpBuilder$withHeaders = function (headers) {
	return _prikhi$elm_http_builder$HttpBuilder$mapRequest(
		function (request) {
			return _elm_lang$core$Native_Utils.update(
				request,
				{
					headers: A2(
						_elm_lang$core$Basics_ops['++'],
						A2(
							_elm_lang$core$List$map,
							_elm_lang$core$Basics$uncurry(_elm_lang$http$Http$header),
							headers),
						request.headers)
				});
		});
};
var _prikhi$elm_http_builder$HttpBuilder$withBody = function (body) {
	return _prikhi$elm_http_builder$HttpBuilder$mapRequest(
		function (request) {
			return _elm_lang$core$Native_Utils.update(
				request,
				{body: body});
		});
};
var _prikhi$elm_http_builder$HttpBuilder$withStringBody = F2(
	function (contentType, data) {
		return _prikhi$elm_http_builder$HttpBuilder$withBody(
			A2(_elm_lang$http$Http$stringBody, contentType, data));
	});
var _prikhi$elm_http_builder$HttpBuilder$withJsonBody = function (_p12) {
	return A2(
		_prikhi$elm_http_builder$HttpBuilder$withStringBody,
		'application/json',
		A2(_elm_lang$core$Json_Encode$encode, 0, _p12));
};
var _prikhi$elm_http_builder$HttpBuilder$withUrlEncodedBody = function (_p13) {
	return A2(
		_prikhi$elm_http_builder$HttpBuilder$withStringBody,
		'application/x-www-form-urlencoded',
		_prikhi$elm_http_builder$HttpBuilder$joinUrlEncoded(_p13));
};
var _prikhi$elm_http_builder$HttpBuilder$withMultipartBody = function (_p14) {
	return _prikhi$elm_http_builder$HttpBuilder$withBody(
		_elm_lang$http$Http$multipartBody(_p14));
};
var _prikhi$elm_http_builder$HttpBuilder$withMultipartStringBody = function (_p15) {
	return _prikhi$elm_http_builder$HttpBuilder$withMultipartBody(
		A2(
			_elm_lang$core$List$map,
			function (_p16) {
				var _p17 = _p16;
				return A2(_elm_lang$http$Http$stringPart, _p17._0, _p17._1);
			},
			_p15));
};
var _prikhi$elm_http_builder$HttpBuilder$mapSettings = F2(
	function (updater, _p18) {
		var _p19 = _p18;
		return A3(
			_prikhi$elm_http_builder$HttpBuilder$RequestBuilder,
			_p19._0,
			updater(_p19._1),
			_p19._2);
	});
var _prikhi$elm_http_builder$HttpBuilder$withTimeout = function (timeout) {
	return _prikhi$elm_http_builder$HttpBuilder$mapSettings(
		function (settings) {
			return _elm_lang$core$Native_Utils.update(
				settings,
				{timeout: timeout});
		});
};
var _prikhi$elm_http_builder$HttpBuilder$withCredentials = _prikhi$elm_http_builder$HttpBuilder$mapSettings(
	function (settings) {
		return _elm_lang$core$Native_Utils.update(
			settings,
			{withCredentials: true});
	});
var _prikhi$elm_http_builder$HttpBuilder$mapInternals = F2(
	function (updater, _p20) {
		var _p21 = _p20;
		return A3(
			_prikhi$elm_http_builder$HttpBuilder$RequestBuilder,
			_p21._0,
			_p21._1,
			updater(_p21._2));
	});
var _prikhi$elm_http_builder$HttpBuilder$withCacheBuster = _prikhi$elm_http_builder$HttpBuilder$mapInternals(
	function (internals) {
		return _elm_lang$core$Native_Utils.update(
			internals,
			{cacheBuster: true});
	});
var _prikhi$elm_http_builder$HttpBuilder$withZeroStatusAllowed = _prikhi$elm_http_builder$HttpBuilder$mapInternals(
	function (internals) {
		return _elm_lang$core$Native_Utils.update(
			internals,
			{zeroStatusAllowed: true});
	});
var _prikhi$elm_http_builder$HttpBuilder$DecodingFailure = function (a) {
	return {ctor: 'DecodingFailure', _0: a};
};
var _prikhi$elm_http_builder$HttpBuilder$BadPayload = F2(
	function (a, b) {
		return {ctor: 'BadPayload', _0: a, _1: b};
	});
var _prikhi$elm_http_builder$HttpBuilder$BadStatus = function (a) {
	return {ctor: 'BadStatus', _0: a};
};
var _prikhi$elm_http_builder$HttpBuilder$NetworkError = {ctor: 'NetworkError'};
var _prikhi$elm_http_builder$HttpBuilder$Timeout = {ctor: 'Timeout'};
var _prikhi$elm_http_builder$HttpBuilder$BadUrl = function (a) {
	return {ctor: 'BadUrl', _0: a};
};
var _prikhi$elm_http_builder$HttpBuilder$parseError = F4(
	function (successReader, errorReader, internals, error) {
		var applyOrError = F2(
			function (response, errorFunc) {
				var _p22 = errorReader(response.data);
				if (_p22.ctor === 'Ok') {
					return errorFunc(
						_elm_lang$core$Native_Utils.update(
							response,
							{data: _p22._0}));
				} else {
					return _prikhi$elm_http_builder$HttpBuilder$DecodingFailure(_p22._0);
				}
			});
		var _p23 = error;
		switch (_p23.ctor) {
			case 'BadStatus':
				var _p25 = _p23._0;
				if (internals.zeroStatusAllowed && _elm_lang$core$Native_Utils.eq(_p25.status, 0)) {
					var _p24 = successReader(_p25.data);
					if (_p24.ctor === 'Err') {
						return _elm_lang$core$Task$fail(
							_prikhi$elm_http_builder$HttpBuilder$DecodingFailure(_p24._0));
					} else {
						return _elm_lang$core$Task$succeed(
							_elm_lang$core$Native_Utils.update(
								_p25,
								{data: _p24._0}));
					}
				} else {
					return _elm_lang$core$Task$fail(
						A2(applyOrError, _p25, _prikhi$elm_http_builder$HttpBuilder$BadStatus));
				}
			case 'BadPayload':
				return _elm_lang$core$Task$fail(
					A2(
						applyOrError,
						_p23._1,
						_prikhi$elm_http_builder$HttpBuilder$BadPayload(_p23._0)));
			case 'BadUrl':
				return _elm_lang$core$Task$fail(
					_prikhi$elm_http_builder$HttpBuilder$BadUrl(_p23._0));
			case 'Timeout':
				return _elm_lang$core$Task$fail(_prikhi$elm_http_builder$HttpBuilder$Timeout);
			case 'NetworkError':
				return _elm_lang$core$Task$fail(_prikhi$elm_http_builder$HttpBuilder$NetworkError);
			default:
				return _elm_lang$core$Task$fail(
					_prikhi$elm_http_builder$HttpBuilder$DecodingFailure(_p23._0));
		}
	});
var _prikhi$elm_http_builder$HttpBuilder$promoteRawError = function (rawError) {
	var _p26 = rawError;
	switch (_p26.ctor) {
		case 'BadUrl':
			return _prikhi$elm_http_builder$HttpBuilder$BadUrl(_p26._0);
		case 'Timeout':
			return _prikhi$elm_http_builder$HttpBuilder$Timeout;
		case 'NetworkError':
			return _prikhi$elm_http_builder$HttpBuilder$NetworkError;
		case 'BadStatus':
			return _prikhi$elm_http_builder$HttpBuilder$BadStatus(
				_prikhi$elm_http_builder$HttpBuilder$fromResponse(_p26._0));
		default:
			return A2(
				_prikhi$elm_http_builder$HttpBuilder$BadPayload,
				_p26._0,
				_prikhi$elm_http_builder$HttpBuilder$fromResponse(_p26._1));
	}
};
var _prikhi$elm_http_builder$HttpBuilder$sendHelp = F5(
	function (successReader, errorReader, internals, settings, request) {
		return A2(
			_elm_lang$core$Task$onError,
			A3(_prikhi$elm_http_builder$HttpBuilder$parseError, successReader, errorReader, internals),
			A2(
				_elm_lang$core$Task$mapError,
				_prikhi$elm_http_builder$HttpBuilder$promoteRawError,
				_elm_lang$http$Http$toTask(
					A2(
						_prikhi$elm_http_builder$HttpBuilder$toRequest,
						A3(_prikhi$elm_http_builder$HttpBuilder$RequestBuilder, request, settings, internals),
						successReader))));
	});
var _prikhi$elm_http_builder$HttpBuilder$send = F3(
	function (successReader, errorReader, _p27) {
		var _p28 = _p27;
		var _p31 = _p28._1;
		var _p30 = _p28._0;
		var _p29 = _p28._2;
		return _p29.cacheBuster ? A2(
			_elm_lang$core$Task$andThen,
			A4(_prikhi$elm_http_builder$HttpBuilder$sendHelp, successReader, errorReader, _p29, _p31),
			A2(
				_elm_lang$core$Task$map,
				_prikhi$elm_http_builder$HttpBuilder$appendCacheBusterToUrl(_p30),
				_elm_lang$core$Time$now)) : A5(_prikhi$elm_http_builder$HttpBuilder$sendHelp, successReader, errorReader, _p29, _p31, _p30);
	});
