var _Bogdanp$elm_datepicker$DatePicker_ops = _Bogdanp$elm_datepicker$DatePicker_ops || {};
_Bogdanp$elm_datepicker$DatePicker_ops['?>'] = _elm_lang$core$Basics$flip(_elm_lang$core$Maybe$withDefault);
var _Bogdanp$elm_datepicker$DatePicker$mkClassList = F2(
	function (_p0, cs) {
		var _p1 = _p0;
		return _elm_lang$html$Html_Attributes$classList(
			A2(
				_elm_lang$core$List$map,
				function (_p2) {
					var _p3 = _p2;
					return {
						ctor: '_Tuple2',
						_0: A2(_elm_lang$core$Basics_ops['++'], _p1.classNamespace, _p3._0),
						_1: _p3._1
					};
				},
				cs));
	});
var _Bogdanp$elm_datepicker$DatePicker$mkClass = F2(
	function (_p4, c) {
		var _p5 = _p4;
		return _elm_lang$html$Html_Attributes$class(
			A2(_elm_lang$core$Basics_ops['++'], _p5.classNamespace, c));
	});
var _Bogdanp$elm_datepicker$DatePicker$groupDates = function (dates) {
	var go = F4(
		function (i, xs, racc, acc) {
			go:
			while (true) {
				var _p6 = xs;
				if (_p6.ctor === '[]') {
					return _elm_lang$core$List$reverse(acc);
				} else {
					var _p8 = _p6._1;
					var _p7 = _p6._0;
					if (_elm_lang$core$Native_Utils.eq(i, 6)) {
						var _v4 = 0,
							_v5 = _p8,
							_v6 = {ctor: '[]'},
							_v7 = {
							ctor: '::',
							_0: _elm_lang$core$List$reverse(
								{ctor: '::', _0: _p7, _1: racc}),
							_1: acc
						};
						i = _v4;
						xs = _v5;
						racc = _v6;
						acc = _v7;
						continue go;
					} else {
						var _v8 = i + 1,
							_v9 = _p8,
							_v10 = {ctor: '::', _0: _p7, _1: racc},
							_v11 = acc;
						i = _v8;
						xs = _v9;
						racc = _v10;
						acc = _v11;
						continue go;
					}
				}
			}
		});
	return A4(
		go,
		0,
		dates,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _Bogdanp$elm_datepicker$DatePicker$prepareDates = F2(
	function (date, _p9) {
		var _p10 = _p9;
		var end = A2(
			_Bogdanp$elm_datepicker$DatePicker_Date$addDays,
			6,
			_Bogdanp$elm_datepicker$DatePicker_Date$nextMonth(date));
		var start = A2(
			_Bogdanp$elm_datepicker$DatePicker_Date$subDays,
			6,
			_Bogdanp$elm_datepicker$DatePicker_Date$firstOfMonth(date));
		return _elm_lang$core$Native_Utils.update(
			_p10,
			{
				currentMonth: date,
				currentDates: A3(_Bogdanp$elm_datepicker$DatePicker_Date$datesInRange, _p10.settings.firstDayOfWeek, start, end)
			});
	});
var _Bogdanp$elm_datepicker$DatePicker$defaultSettings = {
	placeholder: 'Please pick a date...',
	classNamespace: 'elm-datepicker--',
	inputClassList: {ctor: '[]'},
	inputName: _elm_lang$core$Maybe$Nothing,
	isDisabled: _elm_lang$core$Basics$always(false),
	dateFormatter: _Bogdanp$elm_datepicker$DatePicker_Date$formatDate,
	dayFormatter: _Bogdanp$elm_datepicker$DatePicker_Date$formatDay,
	monthFormatter: _Bogdanp$elm_datepicker$DatePicker_Date$formatMonth,
	yearFormatter: _elm_lang$core$Basics$toString,
	firstDayOfWeek: _elm_lang$core$Date$Sun,
	pickedDate: _elm_lang$core$Maybe$Nothing
};
var _Bogdanp$elm_datepicker$DatePicker$Settings = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {placeholder: a, classNamespace: b, inputClassList: c, inputName: d, isDisabled: e, dateFormatter: f, dayFormatter: g, monthFormatter: h, yearFormatter: i, firstDayOfWeek: j, pickedDate: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _Bogdanp$elm_datepicker$DatePicker$Model = F7(
	function (a, b, c, d, e, f, g) {
		return {open: a, forceOpen: b, today: c, currentMonth: d, currentDates: e, pickedDate: f, settings: g};
	});
var _Bogdanp$elm_datepicker$DatePicker$MouseUp = {ctor: 'MouseUp'};
var _Bogdanp$elm_datepicker$DatePicker$MouseDown = {ctor: 'MouseDown'};
var _Bogdanp$elm_datepicker$DatePicker$Blur = {ctor: 'Blur'};
var _Bogdanp$elm_datepicker$DatePicker$Focus = {ctor: 'Focus'};
var _Bogdanp$elm_datepicker$DatePicker$Change = function (a) {
	return {ctor: 'Change', _0: a};
};
var _Bogdanp$elm_datepicker$DatePicker$Pick = function (a) {
	return {ctor: 'Pick', _0: a};
};
var _Bogdanp$elm_datepicker$DatePicker$PrevMonth = {ctor: 'PrevMonth'};
var _Bogdanp$elm_datepicker$DatePicker$NextMonth = {ctor: 'NextMonth'};
var _Bogdanp$elm_datepicker$DatePicker$datePicker = function (_p11) {
	var _p12 = _p11;
	var _p17 = _p12.today;
	var _p16 = _p12.settings;
	var _p15 = _p12.currentMonth;
	var onPicker = function (ev) {
		return function (_p13) {
			return A3(
				_elm_lang$html$Html_Events$onWithOptions,
				ev,
				{preventDefault: true, stopPropagation: true},
				_elm_lang$core$Json_Decode$succeed(_p13));
		};
	};
	var picked = function (d) {
		var _p14 = _p12.pickedDate;
		if (_p14.ctor === 'Nothing') {
			return _elm_lang$core$Native_Utils.eq(
				_Bogdanp$elm_datepicker$DatePicker_Date$dateTuple(d),
				_Bogdanp$elm_datepicker$DatePicker_Date$dateTuple(_p17));
		} else {
			return _elm_lang$core$Native_Utils.eq(
				_Bogdanp$elm_datepicker$DatePicker_Date$dateTuple(d),
				_Bogdanp$elm_datepicker$DatePicker_Date$dateTuple(_p14._0));
		}
	};
	var firstDay = _p16.firstDayOfWeek;
	var classList = _Bogdanp$elm_datepicker$DatePicker$mkClassList(_p16);
	var day = function (d) {
		var disabled = _p16.isDisabled(d);
		var props = (!disabled) ? {
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_Bogdanp$elm_datepicker$DatePicker$Pick(d)),
			_1: {ctor: '[]'}
		} : {ctor: '[]'};
		return A2(
			_elm_lang$html$Html$td,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: classList(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'day', _1: true},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'disabled', _1: disabled},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'picked',
										_1: picked(d)
									},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'today',
											_1: _elm_lang$core$Native_Utils.eq(
												_Bogdanp$elm_datepicker$DatePicker_Date$dateTuple(d),
												_Bogdanp$elm_datepicker$DatePicker_Date$dateTuple(_p17))
										},
										_1: {
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'other-month',
												_1: !_elm_lang$core$Native_Utils.eq(
													_elm_lang$core$Date$month(_p15),
													_elm_lang$core$Date$month(d))
											},
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				},
				props),
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(
						_elm_lang$core$Date$day(d))),
				_1: {ctor: '[]'}
			});
	};
	var $class = _Bogdanp$elm_datepicker$DatePicker$mkClass(_p16);
	var arrow = F2(
		function (className, message) {
			return A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: $class(className),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href('javascript:;'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(message),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$tabindex(-1),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{ctor: '[]'});
		});
	var dow = function (d) {
		return A2(
			_elm_lang$html$Html$td,
			{
				ctor: '::',
				_0: $class('dow'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_p16.dayFormatter(d)),
				_1: {ctor: '[]'}
			});
	};
	var row = function (days) {
		return A2(
			_elm_lang$html$Html$tr,
			{
				ctor: '::',
				_0: $class('row'),
				_1: {ctor: '[]'}
			},
			A2(_elm_lang$core$List$map, day, days));
	};
	var days = A2(
		_elm_lang$core$List$map,
		row,
		_Bogdanp$elm_datepicker$DatePicker$groupDates(_p12.currentDates));
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: $class('picker'),
			_1: {
				ctor: '::',
				_0: A2(onPicker, 'mousedown', _Bogdanp$elm_datepicker$DatePicker$MouseDown),
				_1: {
					ctor: '::',
					_0: A2(onPicker, 'mouseup', _Bogdanp$elm_datepicker$DatePicker$MouseUp),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: $class('picker-header'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: $class('prev-container'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(arrow, 'prev', _Bogdanp$elm_datepicker$DatePicker$PrevMonth),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: $class('month-container'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{
										ctor: '::',
										_0: $class('month'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(
											_p16.monthFormatter(
												_elm_lang$core$Date$month(_p15))),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: $class('year'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												_p16.yearFormatter(
													_elm_lang$core$Date$year(_p15))),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: $class('next-container'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(arrow, 'next', _Bogdanp$elm_datepicker$DatePicker$NextMonth),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$table,
					{
						ctor: '::',
						_0: $class('table'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$thead,
							{
								ctor: '::',
								_0: $class('weekdays'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tr,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: dow(firstDay),
										_1: {
											ctor: '::',
											_0: dow(
												A2(_Bogdanp$elm_datepicker$DatePicker_Date$addDows, 1, firstDay)),
											_1: {
												ctor: '::',
												_0: dow(
													A2(_Bogdanp$elm_datepicker$DatePicker_Date$addDows, 2, firstDay)),
												_1: {
													ctor: '::',
													_0: dow(
														A2(_Bogdanp$elm_datepicker$DatePicker_Date$addDows, 3, firstDay)),
													_1: {
														ctor: '::',
														_0: dow(
															A2(_Bogdanp$elm_datepicker$DatePicker_Date$addDows, 4, firstDay)),
														_1: {
															ctor: '::',
															_0: dow(
																A2(_Bogdanp$elm_datepicker$DatePicker_Date$addDows, 5, firstDay)),
															_1: {
																ctor: '::',
																_0: dow(
																	A2(_Bogdanp$elm_datepicker$DatePicker_Date$addDows, 6, firstDay)),
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$tbody,
								{
									ctor: '::',
									_0: $class('days'),
									_1: {ctor: '[]'}
								},
								days),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _Bogdanp$elm_datepicker$DatePicker$view = function (_p18) {
	var _p19 = _p18;
	var _p21 = _p19._0.settings;
	var inputClasses = A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: A2(_elm_lang$core$Basics_ops['++'], _p21.classNamespace, 'input'),
				_1: true
			},
			_1: {ctor: '[]'}
		},
		_p21.inputClassList);
	var inputCommon = function (xs) {
		return A2(
			_elm_lang$html$Html$input,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(inputClasses),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$name(
							A2(_Bogdanp$elm_datepicker$DatePicker_ops['?>'], _p21.inputName, '')),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('text'),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html_Events$on,
									'change',
									A2(_elm_lang$core$Json_Decode$map, _Bogdanp$elm_datepicker$DatePicker$Change, _elm_lang$html$Html_Events$targetValue)),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onBlur(_Bogdanp$elm_datepicker$DatePicker$Blur),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_Bogdanp$elm_datepicker$DatePicker$Focus),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onFocus(_Bogdanp$elm_datepicker$DatePicker$Focus),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				},
				xs),
			{ctor: '[]'});
	};
	var dateInput = function () {
		var _p20 = _p19._0.pickedDate;
		if (_p20.ctor === 'Nothing') {
			return inputCommon(
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder(_p21.placeholder),
					_1: {ctor: '[]'}
				});
		} else {
			return inputCommon(
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$value(
						_p21.dateFormatter(_p20._0)),
					_1: {ctor: '[]'}
				});
		}
	}();
	var $class = _Bogdanp$elm_datepicker$DatePicker$mkClass(_p21);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: $class('container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: dateInput,
			_1: {
				ctor: '::',
				_0: _p19._0.open ? _Bogdanp$elm_datepicker$DatePicker$datePicker(_p19._0) : _elm_lang$html$Html$text(''),
				_1: {ctor: '[]'}
			}
		});
};
var _Bogdanp$elm_datepicker$DatePicker$CurrentDate = function (a) {
	return {ctor: 'CurrentDate', _0: a};
};
var _Bogdanp$elm_datepicker$DatePicker$DatePicker = function (a) {
	return {ctor: 'DatePicker', _0: a};
};
var _Bogdanp$elm_datepicker$DatePicker$init = function (settings) {
	var date = A2(_Bogdanp$elm_datepicker$DatePicker_ops['?>'], settings.pickedDate, _Bogdanp$elm_datepicker$DatePicker_Date$initDate);
	return {
		ctor: '_Tuple2',
		_0: _Bogdanp$elm_datepicker$DatePicker$DatePicker(
			A2(
				_Bogdanp$elm_datepicker$DatePicker$prepareDates,
				date,
				{
					open: false,
					forceOpen: false,
					today: _Bogdanp$elm_datepicker$DatePicker_Date$initDate,
					currentMonth: _Bogdanp$elm_datepicker$DatePicker_Date$initDate,
					currentDates: {ctor: '[]'},
					pickedDate: settings.pickedDate,
					settings: settings
				})),
		_1: A2(_elm_lang$core$Task$perform, _Bogdanp$elm_datepicker$DatePicker$CurrentDate, _elm_lang$core$Date$now)
	};
};
var _Bogdanp$elm_datepicker$DatePicker_ops = _Bogdanp$elm_datepicker$DatePicker_ops || {};
_Bogdanp$elm_datepicker$DatePicker_ops['!'] = F2(
	function (m, cs) {
		return {
			ctor: '_Tuple3',
			_0: _Bogdanp$elm_datepicker$DatePicker$DatePicker(m),
			_1: _elm_lang$core$Platform_Cmd$batch(cs),
			_2: _elm_lang$core$Maybe$Nothing
		};
	});
var _Bogdanp$elm_datepicker$DatePicker$update = F2(
	function (msg, _p22) {
		var _p23 = _p22;
		var _p32 = _p23._0.pickedDate;
		var _p31 = _p23._0;
		var _p30 = _p23._0.currentMonth;
		var _p24 = msg;
		switch (_p24.ctor) {
			case 'CurrentDate':
				var _p25 = _p24._0;
				return A2(
					_Bogdanp$elm_datepicker$DatePicker_ops['!'],
					A2(
						_Bogdanp$elm_datepicker$DatePicker$prepareDates,
						A2(_Bogdanp$elm_datepicker$DatePicker_ops['?>'], _p32, _p25),
						_elm_lang$core$Native_Utils.update(
							_p31,
							{today: _p25})),
					{ctor: '[]'});
			case 'NextMonth':
				return A2(
					_Bogdanp$elm_datepicker$DatePicker_ops['!'],
					A2(
						_Bogdanp$elm_datepicker$DatePicker$prepareDates,
						_Bogdanp$elm_datepicker$DatePicker_Date$nextMonth(_p30),
						_p31),
					{ctor: '[]'});
			case 'PrevMonth':
				return A2(
					_Bogdanp$elm_datepicker$DatePicker_ops['!'],
					A2(
						_Bogdanp$elm_datepicker$DatePicker$prepareDates,
						_Bogdanp$elm_datepicker$DatePicker_Date$prevMonth(_p30),
						_p31),
					{ctor: '[]'});
			case 'Pick':
				var _p26 = _p24._0;
				return {
					ctor: '_Tuple3',
					_0: _Bogdanp$elm_datepicker$DatePicker$DatePicker(
						A2(
							_Bogdanp$elm_datepicker$DatePicker$prepareDates,
							_p26,
							_elm_lang$core$Native_Utils.update(
								_p31,
								{
									pickedDate: _elm_lang$core$Maybe$Just(_p26),
									open: false
								}))),
					_1: _elm_lang$core$Platform_Cmd$none,
					_2: _elm_lang$core$Maybe$Just(_p26)
				};
			case 'Change':
				var _p27 = function () {
					var _p28 = _elm_lang$core$Date$fromString(_p24._0);
					if (_p28.ctor === 'Err') {
						return {ctor: '_Tuple2', _0: false, _1: _p32};
					} else {
						var _p29 = _p28._0;
						return _p23._0.settings.isDisabled(_p29) ? {ctor: '_Tuple2', _0: false, _1: _p32} : {
							ctor: '_Tuple2',
							_0: true,
							_1: _elm_lang$core$Maybe$Just(_p29)
						};
					}
				}();
				var valid = _p27._0;
				var newPickedDate = _p27._1;
				var month = A2(_Bogdanp$elm_datepicker$DatePicker_ops['?>'], newPickedDate, _p30);
				return {
					ctor: '_Tuple3',
					_0: _Bogdanp$elm_datepicker$DatePicker$DatePicker(
						A2(
							_Bogdanp$elm_datepicker$DatePicker$prepareDates,
							month,
							_elm_lang$core$Native_Utils.update(
								_p31,
								{pickedDate: newPickedDate}))),
					_1: _elm_lang$core$Platform_Cmd$none,
					_2: valid ? newPickedDate : _elm_lang$core$Maybe$Nothing
				};
			case 'Focus':
				return A2(
					_Bogdanp$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p31,
						{open: true, forceOpen: false}),
					{ctor: '[]'});
			case 'Blur':
				return A2(
					_Bogdanp$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p31,
						{open: _p23._0.forceOpen}),
					{ctor: '[]'});
			case 'MouseDown':
				return A2(
					_Bogdanp$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p31,
						{forceOpen: true}),
					{ctor: '[]'});
			default:
				return A2(
					_Bogdanp$elm_datepicker$DatePicker_ops['!'],
					_elm_lang$core$Native_Utils.update(
						_p31,
						{forceOpen: false}),
					{ctor: '[]'});
		}
	});
