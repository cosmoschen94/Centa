var _Bogdanp$elm_datepicker$DatePicker_Date$unsafeDate = function (date) {
	var _p0 = _elm_lang$core$Date$fromString(date);
	if (_p0.ctor === 'Err') {
		return _elm_lang$core$Native_Utils.crashCase(
			'DatePicker.Date',
			{
				start: {line: 541, column: 5},
				end: {line: 546, column: 17}
			},
			_p0)(
			A2(_elm_lang$core$Basics_ops['++'], 'unsafeDate: failed to parse date:', _p0._0));
	} else {
		return _p0._0;
	}
};
var _Bogdanp$elm_datepicker$DatePicker_Date$isLeapYear = function (y) {
	return _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 400),
		0) || ((!_elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 100),
		0)) && _elm_lang$core$Native_Utils.eq(
		A2(_elm_lang$core$Basics_ops['%'], y, 4),
		0));
};
var _Bogdanp$elm_datepicker$DatePicker_Date$daysInMonth = F2(
	function (year, month) {
		var _p2 = month;
		switch (_p2.ctor) {
			case 'Jan':
				return 31;
			case 'Feb':
				return _Bogdanp$elm_datepicker$DatePicker_Date$isLeapYear(year) ? 29 : 28;
			case 'Mar':
				return 31;
			case 'Apr':
				return 30;
			case 'May':
				return 31;
			case 'Jun':
				return 30;
			case 'Jul':
				return 31;
			case 'Aug':
				return 31;
			case 'Sep':
				return 30;
			case 'Oct':
				return 31;
			case 'Nov':
				return 30;
			default:
				return 31;
		}
	});
var _Bogdanp$elm_datepicker$DatePicker_Date$monthFromInt = function (month) {
	var _p3 = month;
	switch (_p3) {
		case 1:
			return _elm_lang$core$Date$Jan;
		case 2:
			return _elm_lang$core$Date$Feb;
		case 3:
			return _elm_lang$core$Date$Mar;
		case 4:
			return _elm_lang$core$Date$Apr;
		case 5:
			return _elm_lang$core$Date$May;
		case 6:
			return _elm_lang$core$Date$Jun;
		case 7:
			return _elm_lang$core$Date$Jul;
		case 8:
			return _elm_lang$core$Date$Aug;
		case 9:
			return _elm_lang$core$Date$Sep;
		case 10:
			return _elm_lang$core$Date$Oct;
		case 11:
			return _elm_lang$core$Date$Nov;
		case 12:
			return _elm_lang$core$Date$Dec;
		default:
			return _elm_lang$core$Native_Utils.crashCase(
				'DatePicker.Date',
				{
					start: {line: 440, column: 5},
					end: {line: 478, column: 72}
				},
				_p3)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'monthFromInt: invalid month: ',
					_elm_lang$core$Basics$toString(_p3)));
	}
};
var _Bogdanp$elm_datepicker$DatePicker_Date$monthToInt = function (month) {
	var _p5 = month;
	switch (_p5.ctor) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var _Bogdanp$elm_datepicker$DatePicker_Date$succMonth = function (month) {
	return _Bogdanp$elm_datepicker$DatePicker_Date$monthFromInt(
		A2(
			F2(
				function (x, y) {
					return x + y;
				}),
			1,
			A3(
				_elm_lang$core$Basics$flip,
				_elm_lang$core$Basics$rem,
				12,
				_Bogdanp$elm_datepicker$DatePicker_Date$monthToInt(month))));
};
var _Bogdanp$elm_datepicker$DatePicker_Date$predMonth = function (month) {
	var prev = A3(
		_elm_lang$core$Basics$flip,
		_elm_lang$core$Basics$rem,
		12,
		_Bogdanp$elm_datepicker$DatePicker_Date$monthToInt(month) - 1);
	return _elm_lang$core$Native_Utils.eq(prev, 0) ? _elm_lang$core$Date$Dec : _Bogdanp$elm_datepicker$DatePicker_Date$monthFromInt(prev);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$monthToString = function (month) {
	var $int = _Bogdanp$elm_datepicker$DatePicker_Date$monthToInt(month);
	return (_elm_lang$core$Native_Utils.cmp($int, 10) < 0) ? A2(
		_elm_lang$core$Basics_ops['++'],
		'0',
		_elm_lang$core$Basics$toString($int)) : _elm_lang$core$Basics$toString($int);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$dayFromInt = function (day) {
	var _p6 = day;
	switch (_p6) {
		case 1:
			return _elm_lang$core$Date$Mon;
		case 2:
			return _elm_lang$core$Date$Tue;
		case 3:
			return _elm_lang$core$Date$Wed;
		case 4:
			return _elm_lang$core$Date$Thu;
		case 5:
			return _elm_lang$core$Date$Fri;
		case 6:
			return _elm_lang$core$Date$Sat;
		case 7:
			return _elm_lang$core$Date$Sun;
		default:
			return _elm_lang$core$Native_Utils.crashCase(
				'DatePicker.Date',
				{
					start: {line: 339, column: 5},
					end: {line: 362, column: 70}
				},
				_p6)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'dayFromInt: invalid day: ',
					_elm_lang$core$Basics$toString(day)));
	}
};
var _Bogdanp$elm_datepicker$DatePicker_Date$dayToInt = function (day) {
	var _p8 = day;
	switch (_p8.ctor) {
		case 'Mon':
			return 1;
		case 'Tue':
			return 2;
		case 'Wed':
			return 3;
		case 'Thu':
			return 4;
		case 'Fri':
			return 5;
		case 'Sat':
			return 6;
		default:
			return 7;
	}
};
var _Bogdanp$elm_datepicker$DatePicker_Date$dayToString = function (day) {
	return (_elm_lang$core$Native_Utils.cmp(day, 10) < 0) ? A2(
		_elm_lang$core$Basics_ops['++'],
		'0',
		_elm_lang$core$Basics$toString(day)) : _elm_lang$core$Basics$toString(day);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$mkDate = F3(
	function (year, month, day) {
		return _Bogdanp$elm_datepicker$DatePicker_Date$unsafeDate(
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(year),
				A2(
					_elm_lang$core$Basics_ops['++'],
					'/',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_Bogdanp$elm_datepicker$DatePicker_Date$monthToString(month),
						A2(
							_elm_lang$core$Basics_ops['++'],
							'/',
							_Bogdanp$elm_datepicker$DatePicker_Date$dayToString(day))))));
	});
var _Bogdanp$elm_datepicker$DatePicker_Date$predDow = function (day) {
	var prev = A3(
		_elm_lang$core$Basics$flip,
		_elm_lang$core$Basics$rem,
		7,
		_Bogdanp$elm_datepicker$DatePicker_Date$dayToInt(day) - 1);
	return _elm_lang$core$Native_Utils.eq(prev, 0) ? _elm_lang$core$Date$Sun : _Bogdanp$elm_datepicker$DatePicker_Date$dayFromInt(prev);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$succDow = function (day) {
	return _Bogdanp$elm_datepicker$DatePicker_Date$dayFromInt(
		A2(
			F2(
				function (x, y) {
					return x + y;
				}),
			1,
			A3(
				_elm_lang$core$Basics$flip,
				_elm_lang$core$Basics$rem,
				7,
				_Bogdanp$elm_datepicker$DatePicker_Date$dayToInt(day))));
};
var _Bogdanp$elm_datepicker$DatePicker_Date$subDay = function (date) {
	var day = _elm_lang$core$Date$day(date) - 1;
	var year = _elm_lang$core$Date$year(date);
	var month = _elm_lang$core$Date$month(date);
	var pred = _Bogdanp$elm_datepicker$DatePicker_Date$predMonth(month);
	var predYear = _elm_lang$core$Native_Utils.eq(pred, _elm_lang$core$Date$Dec) ? (year - 1) : year;
	return (_elm_lang$core$Native_Utils.cmp(day, 1) < 0) ? A3(
		_Bogdanp$elm_datepicker$DatePicker_Date$mkDate,
		predYear,
		pred,
		A2(_Bogdanp$elm_datepicker$DatePicker_Date$daysInMonth, predYear, pred)) : A3(_Bogdanp$elm_datepicker$DatePicker_Date$mkDate, year, month, day);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$addDay = function (date) {
	var day = _elm_lang$core$Date$day(date) + 1;
	var year = _elm_lang$core$Date$year(date);
	var month = _elm_lang$core$Date$month(date);
	var dim = A2(_Bogdanp$elm_datepicker$DatePicker_Date$daysInMonth, year, month);
	var succ = _Bogdanp$elm_datepicker$DatePicker_Date$succMonth(month);
	var succYear = _elm_lang$core$Native_Utils.eq(succ, _elm_lang$core$Date$Jan) ? (year + 1) : year;
	return (_elm_lang$core$Native_Utils.cmp(day, dim) > 0) ? A3(_Bogdanp$elm_datepicker$DatePicker_Date$mkDate, succYear, succ, 1) : A3(_Bogdanp$elm_datepicker$DatePicker_Date$mkDate, year, month, day);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$prevMonth = function (date) {
	var prevMonth = _Bogdanp$elm_datepicker$DatePicker_Date$predMonth(
		_elm_lang$core$Date$month(date));
	var prevYear = _elm_lang$core$Native_Utils.eq(prevMonth, _elm_lang$core$Date$Dec) ? (_elm_lang$core$Date$year(date) - 1) : _elm_lang$core$Date$year(date);
	return A3(_Bogdanp$elm_datepicker$DatePicker_Date$mkDate, prevYear, prevMonth, 1);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$nextMonth = function (date) {
	var nextMonth = _Bogdanp$elm_datepicker$DatePicker_Date$succMonth(
		_elm_lang$core$Date$month(date));
	var nextYear = _elm_lang$core$Native_Utils.eq(nextMonth, _elm_lang$core$Date$Jan) ? (_elm_lang$core$Date$year(date) + 1) : _elm_lang$core$Date$year(date);
	return A3(_Bogdanp$elm_datepicker$DatePicker_Date$mkDate, nextYear, nextMonth, 1);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$firstOfMonth = function (date) {
	return A3(
		_Bogdanp$elm_datepicker$DatePicker_Date$mkDate,
		_elm_lang$core$Date$year(date),
		_elm_lang$core$Date$month(date),
		1);
};
var _Bogdanp$elm_datepicker$DatePicker_Date$repeat = function (f) {
	var go = F2(
		function (n, x) {
			go:
			while (true) {
				if (_elm_lang$core$Native_Utils.eq(n, 0)) {
					return x;
				} else {
					var _v6 = n - 1,
						_v7 = f(x);
					n = _v6;
					x = _v7;
					continue go;
				}
			}
		});
	return go;
};
var _Bogdanp$elm_datepicker$DatePicker_Date$addDays = _Bogdanp$elm_datepicker$DatePicker_Date$repeat(_Bogdanp$elm_datepicker$DatePicker_Date$addDay);
var _Bogdanp$elm_datepicker$DatePicker_Date$subDays = _Bogdanp$elm_datepicker$DatePicker_Date$repeat(_Bogdanp$elm_datepicker$DatePicker_Date$subDay);
var _Bogdanp$elm_datepicker$DatePicker_Date$addDows = _Bogdanp$elm_datepicker$DatePicker_Date$repeat(_Bogdanp$elm_datepicker$DatePicker_Date$succDow);
var _Bogdanp$elm_datepicker$DatePicker_Date$subDows = _Bogdanp$elm_datepicker$DatePicker_Date$repeat(_Bogdanp$elm_datepicker$DatePicker_Date$succDow);
var _Bogdanp$elm_datepicker$DatePicker_Date$dateTuple = function (date) {
	return {
		ctor: '_Tuple3',
		_0: _elm_lang$core$Date$year(date),
		_1: _Bogdanp$elm_datepicker$DatePicker_Date$monthToInt(
			_elm_lang$core$Date$month(date)),
		_2: _elm_lang$core$Date$day(date)
	};
};
var _Bogdanp$elm_datepicker$DatePicker_Date$trimDates = F2(
	function (firstDay, dates) {
		var dl = function (dates) {
			dl:
			while (true) {
				var _p9 = dates;
				if (_p9.ctor === '[]') {
					return {ctor: '[]'};
				} else {
					if (_elm_lang$core$Native_Utils.eq(
						_elm_lang$core$Date$dayOfWeek(_p9._0),
						firstDay)) {
						return dates;
					} else {
						var _v9 = _p9._1;
						dates = _v9;
						continue dl;
					}
				}
			}
		};
		var lastDay = _Bogdanp$elm_datepicker$DatePicker_Date$predDow(firstDay);
		var dr = function (dates) {
			dr:
			while (true) {
				var _p10 = dates;
				if (_p10.ctor === '[]') {
					return {ctor: '[]'};
				} else {
					if (_elm_lang$core$Native_Utils.eq(
						_elm_lang$core$Date$dayOfWeek(_p10._0),
						lastDay)) {
						return dates;
					} else {
						var _v11 = _p10._1;
						dates = _v11;
						continue dr;
					}
				}
			}
		};
		return _elm_lang$core$List$reverse(
			dr(
				_elm_lang$core$List$reverse(
					dl(dates))));
	});
var _Bogdanp$elm_datepicker$DatePicker_Date$datesInRange = F3(
	function (firstDay, min, max) {
		var go = F2(
			function (x, acc) {
				go:
				while (true) {
					var y = _Bogdanp$elm_datepicker$DatePicker_Date$subDay(x);
					if (_elm_lang$core$Native_Utils.eq(
						_Bogdanp$elm_datepicker$DatePicker_Date$dateTuple(y),
						_Bogdanp$elm_datepicker$DatePicker_Date$dateTuple(min))) {
						return {ctor: '::', _0: y, _1: acc};
					} else {
						var _v12 = y,
							_v13 = {ctor: '::', _0: y, _1: acc};
						x = _v12;
						acc = _v13;
						continue go;
					}
				}
			});
		return A2(
			_Bogdanp$elm_datepicker$DatePicker_Date$trimDates,
			firstDay,
			A2(
				go,
				max,
				{ctor: '[]'}));
	});
var _Bogdanp$elm_datepicker$DatePicker_Date$formatMonth = function (month) {
	var _p11 = month;
	switch (_p11.ctor) {
		case 'Jan':
			return 'January';
		case 'Feb':
			return 'February';
		case 'Mar':
			return 'March';
		case 'Apr':
			return 'April';
		case 'May':
			return 'May';
		case 'Jun':
			return 'June';
		case 'Jul':
			return 'July';
		case 'Aug':
			return 'August';
		case 'Sep':
			return 'September';
		case 'Oct':
			return 'October';
		case 'Nov':
			return 'November';
		default:
			return 'December';
	}
};
var _Bogdanp$elm_datepicker$DatePicker_Date$formatDay = function (day) {
	var _p12 = day;
	switch (_p12.ctor) {
		case 'Mon':
			return 'Mo';
		case 'Tue':
			return 'Tu';
		case 'Wed':
			return 'We';
		case 'Thu':
			return 'Th';
		case 'Fri':
			return 'Fr';
		case 'Sat':
			return 'Sa';
		default:
			return 'Su';
	}
};
var _Bogdanp$elm_datepicker$DatePicker_Date$formatDate = function (date) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(
			_elm_lang$core$Date$year(date)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'/',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_Bogdanp$elm_datepicker$DatePicker_Date$monthToString(
					_elm_lang$core$Date$month(date)),
				A2(
					_elm_lang$core$Basics_ops['++'],
					'/',
					_Bogdanp$elm_datepicker$DatePicker_Date$dayToString(
						_elm_lang$core$Date$day(date))))));
};
var _Bogdanp$elm_datepicker$DatePicker_Date$initDate = A3(_Bogdanp$elm_datepicker$DatePicker_Date$mkDate, 1992, _elm_lang$core$Date$May, 29);
